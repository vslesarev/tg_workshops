SET exit_on_error = FALSE

CREATE VERTEX _Gender(PRIMARY_ID gender_id STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _Race(PRIMARY_ID race_id STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _Ethnicity(PRIMARY_ID ethnicity_id STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _Address(PRIMARY_ID address_id STRING, name STRING, lat DOUBLE, lon DOUBLE) WITH primary_id_as_attribute="true"

CREATE VERTEX _City(PRIMARY_ID city_id STRING, cityName STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _State(PRIMARY_ID state_id STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _County(PRIMARY_ID county_id STRING, countyName STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _ZipCode(PRIMARY_ID zip_id STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _SnomedCode(PRIMARY_ID snomed_code STRING, description STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _Patient(PRIMARY_ID patient_id STRING, lastName STRING, firstName STRING, maiden STRING,
                      birthday DATETIME, ssn STRING, license STRING, passport STRING,
                      healthcareExpense DOUBLE, healthcareCoverage DOUBLE, suffix STRING, prefix STRING, maritalStatus STRING, birthplace STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _Allergies(PRIMARY_ID allergy_id STRING, allergy_code STRING, description STRING, startDate DATETIME, endDate DATETIME) WITH primary_id_as_attribute="true"

CREATE VERTEX _Device(PRIMARY_ID UDI_code STRING, description STRING, startDate DATETIME, endDate DATETIME) WITH primary_id_as_attribute="true"

CREATE VERTEX _Medication(PRIMARY_ID medication_id STRING, medication_code STRING, description STRING, startDate DATETIME, endDate DATETIME, baseCost DOUBLE, payerCoverage DOUBLE, dispenses INT, totalCost DOUBLE) WITH primary_id_as_attribute="true"

CREATE VERTEX _Procedures(PRIMARY_ID procedure_id STRING, procedure_code STRING, description STRING, baseCost INT, dateOfProcedure DaTETIME) WITH primary_id_as_attribute="true"

CREATE VERTEX _Careplans(PRIMARY_ID careplan_id STRING, description STRING, startDate DATETIME, endDate DATETIME) WITH primary_id_as_attribute="true"

CREATE VERTEX _Conditions(PRIMARY_ID condition_id STRING, condition_code STRING, description STRING, startDate DATETIME, endDate DATETIME) WITH primary_id_as_attribute="true"

CREATE VERTEX _Immunizations(PRIMARY_ID immunization_id STRING, immunization_code STRING, description STRING, dateOfImmunization DATETIME, baseCost DOUBLE) WITH primary_id_as_attribute="true"

CREATE VERTEX _Observations(PRIMARY_ID observation_id STRING, dateOfObservation DATETIME, observation_code STRING, description STRING, obsValue STRING, units STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _Organizations(PRIMARY_ID organization_id STRING, name STRING, revenue DOUBLE, utilization INT, phone STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _Providers(PRIMARY_ID provider_id STRING, name STRING, utilization INT, speciality STRING) WITH primary_id_as_attribute="true"

CREATE VERTEX _ImagingStudies(PRIMARY_ID imaging_id STRING, bodySiteCode STRING, bodySiteDescription STRING, modalityCode STRING,
                            modalityDescription STRING, SOPCode STRING, SOPDescription STRING, dateOfImage DATETIME) WITH primary_id_as_attribute="true"

CREATE VERTEX _Payer(PRIMARY_ID payer_id STRING, name STRING, phone STRING, amountCovered DOUBLE, amountUncovered DOUBLE, revenue DOUBLE,
                    coveredEncounters INT, uncoveredEncounters INT, coveredMedications INT, uncoveredMedications INT,
                    coveredProcedures INT, uncoveredProcedures INT, coveredImmunizations INT, uncoveredImmunizations INT,
                    uniqueCustomers INT, QOLS_Avg DOUBLE, memberMonths INT) WITH primary_id_as_attribute="true"

CREATE VERTEX _Encounter(PRIMARY_ID encounter_id STRING, baseEncounterCost DOUBLE, totalClaimCost DOUBLE, payerCoverage DOUBLE, classType STRING, startTime DATETIME, endTime DATETIMe) WITH primary_id_as_attribute="true"

create vertex _Notes(PRIMARY_ID note_id STRING, chiefComplaint STRING, historyOfPresentIllness STRING, socialHistory STRING, allergies STRING, medications STRING, assessment STRING, plan STRING) with primary_id_as_attribute="true"

create vertex _Symptoms(PRIMARY_ID symptom_id STRING, symptom STRING, symptomValue INT, pathology STRING) with primary_id_as_attribute="true"

create vertex _Attribute(primary_id label STRING, attributeValue INT) with primary_id_as_attribute="true"

create undirected edge _PATIENT_HAS_ATTRIBUTE(from _Patient, To _Attribute)

create UNDIRECTED edge _PATIENT_HAS_SYMPTOM(From _Patient, To _Symptoms, ageBegin INT, ageEnd INT)

CREATE Undirected edge _PATIENT_NOTE(FROM _Patient, to _Notes, dateOfNote DATETIME)

CREATE UNDIRECTED EDGE _ADDRESS_CITY(From _Address, To _City)
CREATE UNDIRECTED EDGE _ADDRESS_COUNTY(From _Address, To _County)
CREATE UNDIRECTED EDGE _ADDRESS_ZIPCODE(From _Address, To _ZipCode)
CREATE UNDIRECTEd edge _STATE_HAS_COUNTY(From _State, To _County)
CREATE UNDIRECTEd edge _COUNTY_HAS_CITY(From _County, To _City)
CREATE UNDIRECTEd edge _CITY_HAS_ZIPCODE(From _City, To _ZipCode)

CREATE UNDIRECTED EDGE _PATIENT_GENDER(FROM _Patient, TO _Gender)
CREATE UNDIRECTED EDGE _PATIENT_ADDRESS(FROM _Patient, To _Address)
CREATE UNDIRECTED EDGE _PATIENT_RACE(FROM _Patient, TO _Race)
CREATE UNDIRECTED EDGE _PATIENT_ETHNICITY(FROM _Patient, TO _Ethnicity)

CREATE UNDIRECTED EDGE _PATIENT_HAS_ALLERGY(FROM _Allergies, to _Patient)
Create UNDIRECTED EDGE _ENCOUNTER_FOR_ALLERGY(FROM _Allergies, TO _Encounter)
CREATE UNDIRECTED EDGE _ALLERGY_CODE(FROM _Allergies, TO _SnomedCode)

CREATE UNDIRECTED EDGE _PATIENT_HAS_DEVICE(FROM _Device, TO _Patient)
CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_DEVICE(FROM _Device, TO _Encounter)
CREATE UNDIRECTED EDGE _DEVICE_CODE(FROM _Device, TO _SnomedCode)

CREATE UNDIRECTED EDGE _PATIENT_HAS_MEDICATION(FROM _Medication, TO _Patient)
CREATE UNDIRECTED EDGE _MEDICATION_PAYER(FROM _Medication, TO _Payer)
CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_MEDICATION(FROM _Medication, TO _Encounter)
CREATE UNDIRECTED EDGE _MEDICATION_REASON_CODE(FROM _Medication, TO _SnomedCode)
CREATE UNDIRECTED EDGE _MEDICATION_CODE(FROM _Medication, To _SnomedCode)

CREATE UNDIRECTED EDGE _PROCEDURE_CODE(FROM _Procedures, To _SnomedCode)
CREATE UNDIRECTED EDGE _PROCEDURE_REASON_CODE(FROM _Procedures, To _SnomedCode)
CREATE UNDIRECTED EDGE _PATIENT_HAS_PROCEDURE(FROM _Procedures, To _Patient)
CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_PROCEDURE(FROM _Procedures, To _Encounter)

CREATE UNDIRECTED EDGE _PATIENT_HAS_CAREPLAN(FROM _Careplans, TO _Patient)
CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_CAREPLAN(FROM _Careplans, TO _Encounter)
CREATE UNDIRECTED EDGE _CAREPLAN_CODE(FROM _Careplans, TO _SnomedCode)
CREATE UNDIRECTED EDGE _CAREPLAN_REASON_CODE(FROM _Careplans, TO _SnomedCode)

CREATE UNDIRECTED EDGE _PATIENT_HAS_CONDITION(FROM _Conditions, TO _Patient)
CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_CONDITION(FROM _Conditions, TO _Encounter)
CREATE UNDIRECTED EDGE _CONDITION_CODE(FROM _Conditions, TO _SnomedCode)

CREATE UNDIRECTED EDGE _PATIENT_HAS_IMMUNIZATION(FROM _Immunizations, TO _Patient)
CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_IMMUNIZATION(FROM _Immunizations, TO _Encounter)
CREATE UNDIRECTED EDGE _IMMUNIZATION_CODE(FROM _Immunizations, TO _SnomedCode)

CREATE UNDIRECTED EDGE _OBSERVATION_FOR_PATIENT(FROM _Observations, TO _Patient)
CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_OBSERVATION(FROM _Observations, TO _Encounter)
create UNDIRECTED edge _OBSERVATION_CODE(From _Observations, To _SnomedCode)

CREATE UNDIRECTED EDGE _ORGANIZATION_ADDRESS(From _Organizations, To _Address)

CREATE UNDIRECTED EDGE _PROVIDER_HAS_ORGANIZATION(FROM _Providers, TO _Organizations)
CREATE UNDIRECTED EDGE _PROVIDER_GENDER(FROM _Providers, TO _Gender)
CREATE UNDIRECTED EDGE _PROVIDER_ADDRESS(From _Providers, To _Address)

CREATE UNDIRECTED EDGE _PATIENT_HAS_IMAGING(FROM _ImagingStudies, TO _Patient)
CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_IMAGING(FROM _ImagingStudies, TO _Encounter)
CREATE UNDIRECTED EDGE _IMAGING_CODE(FROM _ImagingStudies, TO _SnomedCode)

CREATE UNDIRECTED EDGE _PAYER_TRANSITION(FROM _Payer, TO _Patient, startYear DATETIME, endYear DATETIME, ownership STRING)
CREATE UNDIRECTED EDGE _PAYER_ADDRESS(From _Payer, To _Address)

CREATE UNDIRECTED EDGE _ENCOUNTER_FOR_PATIENT(FROM _Encounter, TO _Patient)
CREATE UNDIRECTED EDGE _ENCOUNTER_UNDER_ORGANIZATION(FROM _Encounter, TO _Organizations)
CREATE UNDIRECTED EDGE _ENCOUNTER_HAS_PROVIDER(FROM _Encounter, TO _Providers)
CREATE UNDIRECTED EDGE _ENCOUNTER_HAS_PAYER(FROM _Encounter, TO _Payer)
CREATE UNDIRECTED EDGE _ENCOUNTER_CODE(FROM _Encounter, TO _SnomedCode)
CREATE UNDIRECTED EDGE _ENCOUNTER_REASON_CODE(FROM _Encounter, TO _SnomedCode)

CREATE GRAPH SyntheaGraph(_Gender, _Race, _Ethnicity, _Address, _City, _State, _County, _ZipCode, _SnomedCode, _Patient, _Allergies, _Device, _Medication, _Procedures,
                        _Careplans, _Conditions, _Immunizations, _Observations, _Organizations, _Providers, _ImagingStudies, _Payer, _Encounter, _Notes, _Symptoms, _Attribute, _PATIENT_HAS_ATTRIBUTE,
                        _PATIENT_HAS_SYMPTOM, _PATIENT_NOTE, _ADDRESS_CITY, _ADDRESS_COUNTY, _ADDRESS_ZIPCODE, _STATE_HAS_COUNTY, _COUNTY_HAS_CITY, _CITY_HAS_ZIPCODE, _PATIENT_GENDER,
                        _PATIENT_ADDRESS, _PATIENT_RACE, _PATIENT_ETHNICITY, _PATIENT_HAS_ALLERGY, _ENCOUNTER_FOR_ALLERGY, _ALLERGY_CODE,
                        _PATIENT_HAS_DEVICE, _ENCOUNTER_FOR_DEVICE, _DEVICE_CODE, _PATIENT_HAS_MEDICATION, _MEDICATION_PAYER, _ENCOUNTER_FOR_MEDICATION,
                        _MEDICATION_REASON_CODE, _MEDICATION_CODE, _PROCEDURE_CODE, _PROCEDURE_REASON_CODE, _PATIENT_HAS_PROCEDURE, _ENCOUNTER_FOR_PROCEDURE,
                        _PATIENT_HAS_CAREPLAN, _ENCOUNTER_FOR_CAREPLAN, _CAREPLAN_CODE, _CAREPLAN_REASON_CODE, _PATIENT_HAS_CONDITION, _ENCOUNTER_FOR_CONDITION,
                        _CONDITION_CODE, _PATIENT_HAS_IMMUNIZATION, _ENCOUNTER_FOR_IMMUNIZATION, _IMMUNIZATION_CODE, _OBSERVATION_FOR_PATIENT, _ENCOUNTER_FOR_OBSERVATION,
                        _OBSERVATION_CODE, _ORGANIZATION_ADDRESS, _PROVIDER_HAS_ORGANIZATION, _PROVIDER_GENDER, _PROVIDER_ADDRESS, _PATIENT_HAS_IMAGING, _ENCOUNTER_FOR_IMAGING,
                        _IMAGING_CODE, _PAYER_TRANSITION, _PAYER_ADDRESS, _ENCOUNTER_FOR_PATIENT, _ENCOUNTER_UNDER_ORGANIZATION, _ENCOUNTER_HAS_PROVIDER, _ENCOUNTER_HAS_PAYER,
                        _ENCOUNTER_CODE, _ENCOUNTER_REASON_CODE)
